{"title":"You don't know JS - Up & Going or The Book That Probably Shouldn't Have Been","mainText":"I first heard about Kyle Simpson's series 'You Don't Know JS' from a coworker after having expressed an interest in learning more javascript. I was already reading Eloquent Javascript by that point so I didn't think much of it after that until I was heard him speaking on the Software Engineering Daily podcast, where he was a guest. \r\nHe spoke about Javascript as a language that was large misunderstood, mostly by people who never took the time to learn the language properly. On this point alone I have to agree with him. I think there's a widely held belief that Javascript is _easy_, that there's not actually that much to it, and yet so many people find issue with it and laud the introduction of mostly unnecessary frameworks.\r\n\r\nAfter this interview, I bought the first 2 books in the series. The first of which, named 'Up & Going', I will review here. I will note, I am reviewing this as a standalone book without having read the following books. Although it _is_ part of a series, it is sold individually and should have individual merit. I'll review the rest of the books as well when I have the opportunity.\r\n\r\n### Who is the target audience\r\nIt's hard to say. Despite being only the 65 pages(of content) long, the first 28 pages are a review(or very brief introduction) of the key features that exist in most programming languages, ie. operators, types, variables, comments, blocks, conditionals, loops and functions.\r\n\r\nThis first chapter begins by stating that it is intended for those with little to no programming experience. It suggests using other supplemental materials to aid the learning process. In reality, all of the information conveyed in this first chapter is a subset of that which you would find in any other 'Intro to JS' book or online tutorial.\r\nIs this chapter(half the book) useful to a novice programmer? Not that much.\r\nIs it useful to a more experienced developer, unacquainted with Javascript? Not that much. I feel that if a novice developer was really trying to learn javascript using this book, they would need to pause after chapter 1, consult a lot of other online resources, perhaps a whole different book, then come back to chapter 2.\r\nI also noticed that among these very elementary topics, the author also throws in some references to more advanced ideas like Static Typing, without any explanation. This kind of thing makes it seem like perhaps this book was originally joined with book 2. \r\nIt also kind of suggests that maybe this section was only included so that the book could be labeled as suitable for beginners.\r\n\r\n\r\nAfter a short foray into programming fundamentals, Simpson accelerates through as though about to miss a deadline - by page 54 the author is throwing out quips about trying to implement hierarchical class structures versus prototype delegation, neither of which is fully explained. \r\n\r\nChapter Two, named Into JavaScript covers the following content.\r\n\r\n- Values & Types, Objects\r\n- Built-In Type Methods\r\n- Comparing Values\r\n- Variables\r\n- Function Scopes\r\n- Conditionals\r\n- Strict Mode\r\n- Functions as Values\r\n- Immediately Invoked Function Expressions (IIFEs)\r\n- Closure\r\n- this Identifier\r\n- Prototypes\r\n- Old & New\r\n- Polyfilling\r\n- Transpiling\r\n- Non-JavaScript\r\n\r\nIn 30 short pages, the author runs over most of the core elements of Javascript. How much detail does he go into? Not much. As you can imagine, that's a lot of content for not many pages. Among the examples, there are even uses of features that aren't spoken about in the book. Such as this snippet:\r\n{{code}}function foo() {\r\n\tvar a = arguments[0] !== (void 0) ? arguments[0] : 2;\r\n\tconsole.log( a );\r\n}\r\n{{/code}}\r\n\r\nBy the time piece of code is shown (in the context of Transpiling), the _arguments_ object has never even been discussed. It's not obvious to a beginner programmer that every function in JS has an arguments object by default and it shouldn't be assumed that a programmer knows this without explanation, particularly in a book whos aim is to teach that subject. It is clear by this point in the book(page 57) that the author kind of assumes you are comfortable with programming and no longer has to explain things that might be obvious to those more experienced.\r\n\r\nChapter 3, the final chapter is actually just a glimpse of what is coming in the rest of the series. It is 7 pages long and ultimately useless if you don't intend on reading each of the following books. \r\n\r\nAlthough I'm not exactly delighted with this book, I am hopeful for the rest of the series and I will read the next book in the series(at least). I don't think _this_ book has much value at all. Perhaps it is a result of business incentives rather than actually delivering value to the reader. I don't think this book should exist on it's own. I feel like, at best, it is a brochure or trailer for the rest of the series with a tiny run over the elementary features of most programming languages.\r\nI did learn that the use of the 'use strict' directive will prevent the auto-globaling of variables that have the var keyword omitted. This is a known cause of many headaches for developers. I'm grateful for that, but it wasn't worth the money I spent on this book.\r\n","submitDate":1478473071759,"editDate":"","graphs":"","sn1":"sn1","sn2":"sn2","sn3":"sn3","sn4":"sn4","sn5":"sn5"}