{"title":"A short introduction to the construction of this site","mainText":"The repository for this webpage can be [found here: https://github.com/TadhgDS/minimal-blog](https://github.com/TadhgDS/minimal-blog)\r\n\r\nThe goal of the site was to be minimal in design and very basic to operate. I also wanted to improve my Javascript, so for that reason, the site is built in Javascript and runs on NodeJS.\r\nNode.js is a JavaScript runtime built on Chrome's V8 JavaScript engine and has a great package manager called npm that gives access to thousands of modules/libraries. Of these libraries, I've made use of \r\n\r\n - Express - to listen for http requests and handle routing\r\n - file-system - to read files from the filesystem, eg. html files and post content\r\n - markdown - which will convert markdown to HTML for nicer formatting\r\n\r\n\r\nIf somebody sends a request to the http://www.tpes.me address, it is redirected to the IP of my AWS server and forwarded to port 3000 (the port on which the Nodejs server is listening). The default route is simply '/', so http://www.tpes.me/.\r\nWhen the server receives a http request with the '/' route, it fetches the *home* html template found in the /templates/ directory, replaces the tokens with the relevant information(eg. the list of posts) and sends it to the user.\r\n{{code}}\r\n<section>\r\n    <h1>Essays:</h1>\r\n\t\r\n    <p>\r\n\t    <ul>\r\n\t        {{REPEAT}}\r\n\t        <li>\r\n\t            <h2><a href=\"{{Post1.Link}}\">{{Post1.Title}}</a></h2>\r\n\t        </li>\r\n\t        {{ENDREPEAT}}\r\n\r\n\t    </ul>\r\n\t</p>\r\n\t\r\n</section>\r\n{{/code}}\r\nThis code is part of the home.html file and represents what the page is like before the tokens are replaced with content.\r\n\r\nIn the server code, theres a block like this: \r\n{{code}}\r\n\tfiles.forEach(function(blogPost) {\r\n            blogPosts += htmlForPosts.replace('{{Post1.Link}}', '/post/' + blogPost)\r\n                                     .replace('{{Post1.Title}}', blogPost.stripDashes());\r\n        });\r\n{{/code}}\r\n\r\nThe files object is a list of file names read from the /blog-posts/ directory.\r\nThe above code snippet will iterate over the files list replacing the {{Post1.Link}} and {{Post1.Title}} with the names and address at which to find each post.\r\n\r\nThis same concept of having a html template with tokens to be replaced is used again for the blog posts.\r\nWhen a request comes with the url /post/abcdefg, the server will snip off the trailing 'abcdefg' and check if the requested post title(abcdefg) is contained in the list of known post titles.\r\n\r\nThere is no database used for this website and all of the files are read from the file system.\r\nThe post files are in JSON format and look something like this:\r\n{{code}}\r\n{\r\n\t\"title\":\"\",\r\n\t\"mainText\":\"\",\r\n\t\"submitDate\":1474563892595,\r\n\t\"sn1\":\"sn1\",\r\n\t\"sn2\":\"sn2\",\r\n\t\"sn3\":\"sn3\",\r\n\t\"sn4\":\"sn4\",\r\n\t\"sn5\":\"sn5\"\r\n}\r\n{{/code}}\r\n\r\nThe sn1,sn2..sn5 properties represent side notes that will be appended to the side of the relevant paragraph. This seems a bit clunky at that it only allows 5 sidenotes currently, but it'll be a small job to change and I'll get it to it when I find myself needing more than 5.\r\n\r\nIf the requested post title is found, it is read into memory and the title, mainText and submitDate properties are mapped to the {{Date}}, {{Title}} and {{Contents}} tokens in the entry template. \r\n\r\n{{code}}\r\n<article>\r\n    <h5 id=\"postdate\">{{Date}}</h5>\r\n    <h1 id=\"title\">{{Title}}</h1>\r\n\r\n    <main id=\"mainContent\">\r\n\r\n\r\n        {{Contents}}\r\n\r\n\r\n    </main>\r\n</article>\r\n{{/code}}\r\n\r\nAt this point, I've covered most of how the main two types of page are put together. There's obviously a lot more going on but most of the main functionality is covered in this post. I'll try find some time in the coming days to write a short description of how the posts are produced with markdown conversion, codeblocks and side notes.","submitDate":1477775203830,"editDate":"","graphs":"","sn1":"sn1","sn2":"sn2","sn3":"sn3","sn4":"sn4","sn5":"sn5"}
